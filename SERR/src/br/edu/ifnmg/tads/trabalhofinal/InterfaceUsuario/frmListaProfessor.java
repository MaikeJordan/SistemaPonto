/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package br.edu.ifnmg.tads.trabalhofinal.InterfaceUsuario;

import br.edu.ifnmg.tads.trabalhofinal.DataAccess.EmailDAO;
import br.edu.ifnmg.tads.trabalhofinal.DataAccess.EnderecoDAO;
import br.edu.ifnmg.tads.trabalhofinal.DataAccess.PessoaDAO;
import br.edu.ifnmg.tads.trabalhofinal.DataAccess.ProfessorDAO;
import br.edu.ifnmg.tads.trabalhofinal.DataAccess.TelefoneDAO;
import br.edu.ifnmg.tads.trabalhofinal.DoMainModel.Email;
import br.edu.ifnmg.tads.trabalhofinal.DoMainModel.Endereco;
import br.edu.ifnmg.tads.trabalhofinal.DoMainModel.Pessoa;
import br.edu.ifnmg.tads.trabalhofinal.DoMainModel.Professor;
import br.edu.ifnmg.tads.trabalhofinal.DoMainModel.Telefone;
import java.util.LinkedList;
import java.util.List;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rodrigo
 */
public class frmListaProfessor extends javax.swing.JInternalFrame {
    private List<Professor> professores;
    private ProfessorDAO professordao;
    private Pessoa pessoa;
    private PessoaDAO pessoadao;
    private EmailDAO emaildao;
    private EnderecoDAO enderecodao;
    private TelefoneDAO telefonedao;
    /**
     * Creates new form frmListaProfessor
     */
    public frmListaProfessor() {
        initComponents();
        pessoadao = new PessoaDAO();
        professordao = new ProfessorDAO();
        enderecodao = new EnderecoDAO();
        emaildao = new EmailDAO();
        telefonedao = new TelefoneDAO();
        professores = professordao.ListarTodos();
        preenchetabela(professores);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblProfessores = new javax.swing.JTable();
        btnRemoverCliente = new javax.swing.JButton();
        btnAlterarProfessor = new javax.swing.JButton();
        btnBuscarProfessor = new javax.swing.JButton();
        cbxfiltro = new javax.swing.JComboBox();
        txtFiltro = new javax.swing.JTextField();

        setClosable(true);
        setTitle("Professores");

        tblProfessores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Código", "Nome", "RG", "CPF", "Nível", "Titulação"
            }
        ));
        jScrollPane1.setViewportView(tblProfessores);

        btnRemoverCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icon_remove.fw.png"))); // NOI18N
        btnRemoverCliente.setText("  Remover");
        btnRemoverCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverClienteActionPerformed(evt);
            }
        });

        btnAlterarProfessor.setText("Alterar");
        btnAlterarProfessor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarProfessorActionPerformed(evt);
            }
        });

        btnBuscarProfessor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icon_busca.fw.png"))); // NOI18N
        btnBuscarProfessor.setText("  Buscar");
        btnBuscarProfessor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarProfessorActionPerformed(evt);
            }
        });

        cbxfiltro.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Código", "Nome", "RG", "CPF", "Nível", "Titulação" }));
        cbxfiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxfiltroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtFiltro)
                        .addGap(18, 18, 18)
                        .addComponent(cbxfiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 705, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnRemoverCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAlterarProfessor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnBuscarProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBuscarProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxfiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(btnAlterarProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(btnRemoverCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void preenchetabela(List<Professor> professores){
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Código");
        model.addColumn("Nome");
        model.addColumn("RG");
        model.addColumn("CPF");
        model.addColumn("Titulação");
        model.addColumn("Nível");
        for (Professor professor : professores){
            Vector v = new Vector();
            pessoa = new Pessoa();
            pessoa = pessoadao.Abrir(professor.getCodpessoa());
            professor.setPessoa(pessoa);
            v.add(0, professor.getCodprofessor());
            v.add(1, professor);
            v.add(2, pessoa.getRg());
            v.add(3, pessoa.getCpf());
            v.add(4, professor.getTitulacao());
            v.add(5, professor.getNivel());
            model.addRow(v);
        }
        
        tblProfessores.setModel(model);
    }
    
    private void btnRemoverClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverClienteActionPerformed
        // TODO add your handling code here:
        professores = new LinkedList<>();
        professores = professordao.ListarTodos();
        if (JOptionPane.showConfirmDialog(rootPane, "Deseja Apagar esse Professor?") == 0){
            Professor professor = (Professor) tblProfessores.getValueAt(tblProfessores.getSelectedRow(), 1);

            pessoa = pessoadao.Abrir(professor.getCodpessoa());
            pessoa.setEmails(emaildao.Abrir(professor.getCodpessoa()));
            pessoa.setEnderecos(enderecodao.Abrir(professor.getCodpessoa()));
            pessoa.setTelefones(telefonedao.Abrir(professor.getCodpessoa()));

            for (Endereco en : pessoa.getEnderecos()){
                enderecodao.Apagar(en.getCodendereco());
            }

            for (Telefone tel : pessoa.getTelefones()){
                telefonedao.Apagar(tel.getCodtelefone());
            }

            for (Email em : pessoa.getEmails()){
                emaildao.Apagar(em.getCodemail());
            }

            if (professordao.Apagar(professor.getCodprofessor()) && pessoadao.Apagar(pessoa.getCodpessoa())){
                professores.remove(professor);
                JOptionPane.showMessageDialog(rootPane, "Professor Removido com sucesso");
            }

        } else {
            JOptionPane.showMessageDialog(rootPane, "Ação cancelada");
        }

        preenchetabela(professores);
    }//GEN-LAST:event_btnRemoverClienteActionPerformed

    private void btnAlterarProfessorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarProfessorActionPerformed
        // TODO add your handling code here:
        /*Cliente cliente = (Cliente) tblClientes.getValueAt(tblClientes.getSelectedRow(), 1);
        frmEditarClientes janela = new frmEditarClientes(cliente.getCodcliente());
        this.getParent().add(janela);
        janela.setVisible(true);
        this.setVisible(false);
        */
    }//GEN-LAST:event_btnAlterarProfessorActionPerformed

    private void btnBuscarProfessorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarProfessorActionPerformed
        // TODO add your handling code here:
        Professor professor = new Professor();
        Pessoa pessoa = new Pessoa();
       
            if (cbxfiltro.getSelectedIndex() == 0){
                professor.setCodprofessor(Integer.parseInt(txtFiltro.getText()));
                professor.setPessoa(pessoa);
            }

            if (cbxfiltro.getSelectedIndex() == 1){
                pessoa.setNome(txtFiltro.getText());
                professor.setPessoa(pessoa);
            }

            if (cbxfiltro.getSelectedIndex() == 2){
                pessoa.setRg(txtFiltro.getText());
                professor.setPessoa(pessoa);
            }

            if (cbxfiltro.getSelectedIndex() == 3){
                pessoa.setCpf(Integer.parseInt(txtFiltro.getText()));
                professor.setPessoa(pessoa);
            }
            
            if (cbxfiltro.getSelectedIndex() == 4){
                professor.setNivel(Integer.parseInt(txtFiltro.getText()));
                professor.setPessoa(pessoa);
            }
            
            if (cbxfiltro.getSelectedIndex() == 5){
                professor.setTitulacao(txtFiltro.getText());
                professor.setPessoa(pessoa);
            }
        
        List<Professor> professores = professordao.BuscarProfessor(professor);
        List<Pessoa> pessoas = pessoadao.BuscarPessoa(professor.getPessoa());
        List<Professor> pfss = new LinkedList<>();
        
        for (Professor pf : professores){
            for (Pessoa pe : pessoas){
                if (pf.getCodpessoa() == pe.getCodpessoa()){
                    pf.setPessoa(pe);
                    pfss.add(pf);
                }
            }
        }
        
        preenchetabela(pfss);
        
    }//GEN-LAST:event_btnBuscarProfessorActionPerformed

    private void cbxfiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxfiltroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxfiltroActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterarProfessor;
    private javax.swing.JButton btnBuscarProfessor;
    private javax.swing.JButton btnRemoverCliente;
    private javax.swing.JComboBox cbxfiltro;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblProfessores;
    private javax.swing.JTextField txtFiltro;
    // End of variables declaration//GEN-END:variables
}
